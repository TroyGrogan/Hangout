from rest_framework import serializers
from .models import Chat

class ChatSerializer(serializers.ModelSerializer):
    """Serializer for individual chat messages."""
    timestamp = serializers.SerializerMethodField()
    
    class Meta:
        model = Chat
        # Include fields relevant to the frontend (Chat.jsx, ChatSession.jsx)
        fields = [
            'id', 
            'message',          # User's message
            'response',         # AI's response
            'created_at',       # Original timestamp
            'chat_session',     # Session ID
            'timestamp',        # Formatted timestamp for display
            'user',             # Associated user (read-only)
            'title',            # Session title (can be null)
            # --- Fields below might not be used by current frontend components --- #
            # 'bookmarked',
            # 'remaining_messages', 
            # 'model_mode',
            # 'is_automatic'
        ]
        read_only_fields = ['created_at', 'user', 'response'] # AI response is generated by backend
    
    def get_timestamp(self, obj):
        # Format timestamp as needed by the frontend (e.g., for ChatSession)
        return obj.created_at.isoformat() # Using ISO format is generally good practice

class ChatSessionSerializer(serializers.Serializer):
    """Serializer for representing a full chat session (list of messages)."""
    # Fields used by ChatSession.jsx
    id = serializers.CharField(max_length=50) # Matches model's chat_session field
    title = serializers.CharField(allow_null=True, max_length=255)
    messages = serializers.ListField(child=ChatSerializer()) # Use ChatSerializer for messages
    
    # Fields used by ChatHistory.jsx
    timestamp = serializers.DateTimeField() # Last message timestamp for ordering/display
    message_count = serializers.IntegerField()
    
    # Fields from the model that might be relevant but not currently used in frontend?
    # bookmarked = serializers.BooleanField()
    # remaining_messages = serializers.IntegerField() 